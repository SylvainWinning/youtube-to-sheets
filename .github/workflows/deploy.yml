name: Build and deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_run:
    workflows: ["YouTube to Sheets Sync", "Export Google Sheet to public data"]
    types: [completed]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    # Expose les secrets au build (clé API + ID de la feuille)
    env:
      SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
      YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}

    steps:
      # 1. Récupère le dépôt
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # nécessaire pour l’historique complet

      # 2. Configure Node.js (version et cache)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: bolt-app/package-lock.json

      # 3. Nettoie le cache npm (pour éviter les tarballs corrompus)
      - name: Clean npm cache
        run: npm cache clean --force
        working-directory: bolt-app

      # 4. Installe les dépendances
      - name: Install dependencies
        run: npm ci
        working-directory: bolt-app

      # (Optionnel mais recommandé) configure Pages
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      # 5. Compile le site (Vite lira SPREADSHEET_ID / YOUTUBE_API_KEY)
      - name: Build project
        run: npm run build
        working-directory: bolt-app

      # 6. Prépare l’artefact à publier
      - name: Upload build artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: bolt-app/dist

      # 7. Déploie vers GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        with:
          token: ${{ github.token }}
